# GitHub Pages に Jekyll サイトを自動デプロイするワークフロー

name: Deploy Jekyll with GitHub Pages dependencies preinstalled

# このワークフローを実行するタイミング
on:
  push:
    # デフォルトブランチに push されたときに実行
    branches: ["main"]
  workflow_dispatch:
    # Actions タブから手動で実行可能にする

# GITHUB_TOKEN に付与する権限
permissions:
  contents: read   # リポジトリの内容を読み取る権限
  pages: write     # GitHub Pages へのデプロイ権限
  id-token: write  # 環境への認証トークン生成に必要

# 同時に複数のデプロイを制御
concurrency:
  group: "pages"            # 同じグループ名のワークフローは1つずつ実行
  cancel-in-progress: false # 実行中のジョブはキャンセルせず待機

jobs:
  # ========================================
  # 1. Build Job: Jekyll サイトをビルド
  # ========================================
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # リポジトリをチェックアウトしてローカルにコピー
        uses: actions/checkout@v4

      - name: Setup Pages # GitHub Pages 用に環境をセットアップ
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./pages      # Jekyll ソースディレクトリ
          destination: ./_site # ビルド成果物の出力先

      - name: Upload artifact  # ビルド成果物を次の deploy ジョブに渡す
        uses: actions/upload-pages-artifact@v3

  # ========================================
  # 2. Deploy Job: GitHub Pages にデプロイ
  # ========================================
  deploy:
    environment:
      name: github-pages # GitHub Pages 環境名
      url: ${{ steps.deployment.outputs.page_url }} # 公開 URL を取得
    runs-on: ubuntu-latest
    needs: build # build ジョブが完了するまで待機
    steps:
      - name: Deploy to GitHub Pages # _site の内容を GitHub Pages にデプロイ
        id: deployment
        uses: actions/deploy-pages@v4